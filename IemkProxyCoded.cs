//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lis.Test
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class IemkProxyCoded : WebTest
    {

        public IemkProxyCoded()
        {
            this.Context.Add("host", "0");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            WebTestRequest request1 = new WebTestRequest("http://localhost:50883/iemk/Encounter");
            request1.QueryStringParameters.Add("_format", "json", false, false);
            request1.QueryStringParameters.Add("_idpatient", "1055760f-9ada-4ec3-8a04-d5af3d71de4b", false, false);
            request1.QueryStringParameters.Add("_start", "01.01.2000", false, false);
            request1.QueryStringParameters.Add("_end", "31.12.2015", false, false);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:50883/iemk/Encounter");
            request2.QueryStringParameters.Add("_format", "json", false, false);
            request2.QueryStringParameters.Add("_idcase", "1081", false, false);
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://localhost:50883/iemk/Encounter");
            request3.QueryStringParameters.Add("_format", "json", false, false);
            request3.QueryStringParameters.Add("_idcase", "1082", false, false);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://localhost:50883/iemk/Encounter");
            request4.QueryStringParameters.Add("_format", "json", false, false);
            request4.QueryStringParameters.Add("_idcase", "1083", false, false);
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("http://localhost:50883/iemk/DocumentReference/");
            request5.QueryStringParameters.Add("_format", "json", false, false);
            request5.QueryStringParameters.Add("relatesto", "/Encounter/9b55d0eb-897d-46b1-8fd9-48e3a406b232", false, false);
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest("http://localhost:50883/iemk/DocumentReference/");
            request6.QueryStringParameters.Add("_format", "json", false, false);
            request6.QueryStringParameters.Add("relatesto", "/Encounter/2714c973-4c70-463f-8787-e1a4badac386", false, false);
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("http://localhost:50883/iemk/DocumentReference/");
            request7.QueryStringParameters.Add("_format", "json", false, false);
            request7.QueryStringParameters.Add("relatesto", "/Encounter/2bea8c8b-4612-4c73-becf-aa6f661e999c", false, false);
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest("http://localhost:50883/iemk/DocumentReference/");
            request8.QueryStringParameters.Add("_format", "json", false, false);
            request8.QueryStringParameters.Add("relatesto", "/Encounter/ede909ff-4c50-4768-9566-7387ae40b063", false, false);
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest("http://localhost:50883/iemk/$attachment/16/");
            request9.QueryStringParameters.Add("_format", "json", false, false);
            yield return request9;
            request9 = null;

            WebTestRequest request10 = new WebTestRequest("http://localhost:50883/iemk/$attachment/1002/");
            request10.QueryStringParameters.Add("_format", "json", false, false);
            yield return request10;
            request10 = null;

            ForLoopRule conditionalRule1 = new ForLoopRule();
            conditionalRule1.ContextParameterName = "host";
            conditionalRule1.ComparisonOperator = ForLoopComparisonOperator.LessThan;
            conditionalRule1.TerminatingValue = 10D;
            conditionalRule1.InitialValue = 0D;
            conditionalRule1.IncrementValue = 1D;

            int maxIterations1 = 10;
            bool advanceDataCursors1 = false;
            this.BeginLoop(conditionalRule1, maxIterations1, advanceDataCursors1);

            for (; this.ExecuteConditionalRule(conditionalRule1); )
            {
                WebTestRequest request11 = new WebTestRequest("http://localhost:50883/iemk/Encounter");
                request11.QueryStringParameters.Add("_format", "json", false, false);
                request11.QueryStringParameters.Add("_idpatient", "1055760f-9ada-4ec3-8a04-d5af3d71de4b", false, false);
                request11.QueryStringParameters.Add("_start", "01.01.2000", false, false);
                request11.QueryStringParameters.Add("_end", "31.12.2015", false, false);
                yield return request11;
                request11 = null;
            }

            this.EndLoop(conditionalRule1);
        }
    }
}
